TestNG: Suites, Dependencies, and Flows (day44)

Overview
- Purpose: Organize and orchestrate tests using TestNG features.
- Files: LoginTest.java, SignUpTest.java, PaymentTest.java, DependencyTesting.java, testng.xml

Suites and xml
- testng.xml defines suites, tests, classes, groups, and parameters.
- Run from IDE or CI; parallel modes available.

Dependencies
- @Test(dependsOnMethods=..., dependsOnGroups=...) to enforce order.
- Use cautiously; prefer independent tests unless modeling real flows.

Examples Explained
1) LoginTest.java / SignUpTest.java / PaymentTest.java
- Show independent tests and grouped execution via xml.

2) DependencyTesting.java
- Demonstrates method-level dependencies and skip/failed dependency behavior.

3) testng.xml
- Defines suite with included classes and optional parameters.

Good Practices
- Keep dependencies shallow; avoid long chains.
- Use groups for selective runs (smoke, regression).
- Record flaky tests and quarantine to keep suite green.
